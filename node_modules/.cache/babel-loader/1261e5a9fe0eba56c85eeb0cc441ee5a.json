{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport React, { lazy } from 'react';\nimport Backend from 'i18next-http-backend';\nimport translationEn from '../languages/en/translationEn.json';\nimport translationSv from '../languages/sv/translationSv.json';\nimport translationDe from '../languages/de/translationDe.json'; // const translationEn = lazy(() => import('../languages/en/translationEn.json'));\n// const translationSv = lazy(() => import('../languages/sv/translationSv.json'));\n// const translationDe = lazy(() => import('../languages/de/translationDe.json'));\n\nconst resources = {\n  en: {\n    translation: translationEn\n  },\n  sv: {\n    translation: translationSv\n  },\n  de: {\n    translation: translationDe\n  }\n};\ni18n.use(Backend).init({\n  backend: {\n    // for all available options read the backend's repository readme file\n    loadPath: '/languages/{{lng}}/translation.json'\n  }\n}); //   .use(initReactI18next)\n//   .init({\n//     lng: 'en',\n//     debug: true,\n//     fallbackLng: 'en',\n//     detection: {\n//     order: ['queryString', 'cookie'],\n//     cache: ['cookie']\n//     },\n//     interpolation: {\n//       escapeValue: false,\n//     },\n//     resources\n// });\n\nexport default i18n;","map":{"version":3,"sources":["C:/Users/HelenaW86/Desktop/internationalize/src/components/i18n.js"],"names":["i18n","initReactI18next","React","lazy","Backend","translationEn","translationSv","translationDe","resources","en","translation","sv","de","use","init","backend","loadPath"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,KAAP,IAAeC,IAAf,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEL;AADX,GADY;AAIhBM,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEJ;AADX,GAJY;AAOhBM,EAAAA,EAAE,EAAE;AACFF,IAAAA,WAAW,EAAEH;AADX;AAPY,CAAlB;AAaAP,IAAI,CACDa,GADH,CACOT,OADP,EAEGU,IAFH,CAEQ;AACJC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,QAAQ,EAAE;AAFH;AADL,CAFR,E,CASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAehB,IAAf","sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport React, {lazy} from 'react';\r\nimport Backend from 'i18next-http-backend'\r\n\r\nimport translationEn from '../languages/en/translationEn.json'\r\nimport translationSv from '../languages/sv/translationSv.json'\r\nimport translationDe from '../languages/de/translationDe.json'\r\n\r\n// const translationEn = lazy(() => import('../languages/en/translationEn.json'));\r\n// const translationSv = lazy(() => import('../languages/sv/translationSv.json'));\r\n// const translationDe = lazy(() => import('../languages/de/translationDe.json'));\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEn\r\n  },\r\n  sv: {\r\n    translation: translationSv\r\n  },\r\n  de: {\r\n    translation: translationDe\r\n  }\r\n}\r\n\r\n\r\ni18n\r\n  .use(Backend)\r\n  .init({\r\n    backend: {\r\n      // for all available options read the backend's repository readme file\r\n      loadPath: '/languages/{{lng}}/translation.json'\r\n    }\r\n  });\r\n\r\n//   .use(initReactI18next)\r\n//   .init({\r\n   \r\n//     lng: 'en',\r\n//     debug: true,\r\n//     fallbackLng: 'en',\r\n//     detection: {\r\n//     order: ['queryString', 'cookie'],\r\n//     cache: ['cookie']\r\n//     },\r\n//     interpolation: {\r\n//       escapeValue: false,\r\n//     },\r\n//     resources\r\n// });\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}